---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: gateway
  name: octopus-gateway-router-configmap
data:
  GATEWAY_API_ROUTE_URL: http://octopus-gateway-api/route

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: gateway
  name: octopus-gateway-router
  labels:
    app: octopus-gateway-router
spec:
  selector:
    matchLabels:
      app: octopus-gateway-router
  replicas: 1
  template:
    metadata:
      labels:
        app: octopus-gateway-router
    spec:
      containers:
      - name: router
        image: asia-northeast1-docker.pkg.dev/bigdata-329111/octopus/octopus-gateway-router@sha256:45e10412651d3bc336739cfd110a028002f904b8ea89145262a0257310f28129
        ports:
        - containerPort: 80
        env:
        - name: GATEWAY_API_ROUTE_URL
          valueFrom:
            configMapKeyRef:
              name: octopus-gateway-router-configmap
              key: GATEWAY_API_ROUTE_URL

---
# backendconfig: healthcheck(/health) & websocket timeout(3600s)
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  namespace: gateway
  name: octopus-gateway-router-backendconfig
spec:
  healthCheck:
    type: HTTP
    requestPath: /health
    port: 80
  timeoutSec: 3600
  connectionDraining:
    drainingTimeoutSec: 3600

---
apiVersion: v1
kind: Service
metadata:
  namespace: gateway
  name: octopus-gateway-router
  labels:
    app: octopus-gateway-router
  annotations:
    cloud.google.com/backend-config: '{"default": "octopus-gateway-router-backendconfig"}'
spec:
  type: ClusterIP
  selector:
    app: octopus-gateway-router
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: gateway
  name: octopus-gateway-ingress
spec:
  defaultBackend:
    service:
      name: octopus-gateway-router
      port:
        number: 80
  # rules:
  # - http:
  #     paths:
  #     - path: /
  #       pathType: ImplementationSpecific
  #       backend:
  #         service:
  #           name: octopus-gateway-router
  #           port:
  #             number: 80
